<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFrameworks>net8.0-android;</TargetFrameworks>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
   
    <OutputType>Exe</OutputType>
    <RootNamespace>SpotifyVoiceCommander.Maui</RootNamespace>
    <UseMaui>true</UseMaui>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>enable</ImplicitUsings>
    <EnableDefaultCssItems>false</EnableDefaultCssItems>
    <Nullable>enable</Nullable>

    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>

    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">26.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
  </PropertyGroup>

  <ItemGroup>
    <!-- App Icon -->
    <MauiIcon Include="Shared\Resources\AppIcon\appicon.svg" ForegroundFile="Shared\Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

    <!-- Splash Screen -->
    <MauiSplashScreen Include="Shared\Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />
  </ItemGroup>

  <!-- Project references -->
  <ItemGroup>
    <ProjectReference Include="..\SpotifyVoiceCommander.Shared\SpotifyVoiceCommander.Shared.csproj" />
  </ItemGroup>

  <!-- Package references -->
  <ItemGroup>
    <PackageReference Include="ActualLab.Fusion.Blazor" Version="8.0.8" />
    <PackageReference Include="Auth0.OidcClient.MAUI" Version="1.0.1" />
    <PackageReference Include="CommunityToolkit.Maui" Version="9.0.2" />
    <PackageReference Include="ErrorOr" Version="2.0.1" />
    <PackageReference Include="Etai.Blazor.Maui" Version="0.1.4.1" />
    <PackageReference Include="Fluxor.Blazor.Web" Version="6.0.0" />
    <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.70" />
    <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.70" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.70" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
    <PackageReference Include="Plugin.Maui.Audio" Version="3.0.0" />
    <PackageReference Include="RestSharp" Version="111.4.0" />
    <PackageReference Include="Serilog" Version="4.0.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="SpotifyAPI.Web" Version="7.1.1" />
    <PackageReference Include="System.Text.Json" Version="8.0.4" />
  </ItemGroup>

  <!-- Platform-specific package references -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
    <PackageReference Include="Serilog.Sinks.Xamarin" Version="1.0.0" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
    <PackageReference Include="Serilog.Sinks.Debug" Version="3.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Entities\AudioPlayer\Components\" />
    <Folder Include="Entities\Viewer\Components\" />
    <Folder Include="Entities\Viewer\Lib\" />
  </ItemGroup>

  <!-- Dev Constants -->

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DefineConstants>$(DefineConstants);TRACE;IS_DEV_MAUI</DefineConstants>

    <!--Закомментить, если не нужен вывод информации о рендере блазорных компонентов-->
    <!--<DefineConstants>$(DefineConstants);SHOW_BLAZOR_RENDER_INFO</DefineConstants>-->
  </PropertyGroup>

  <!--Environment settings-->

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <ApplicationId>spotify.voice.commander.dev.app</ApplicationId>
    <ApplicationTitle>SpotifyVoiceCommander.Maui (Dev)</ApplicationTitle>

    <DefineConstants>$(DefineConstants);DEVELOPMENT</DefineConstants>
    <!--<DefineConstants>$(DefineConstants);PRODUCTION</DefineConstants>-->
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <ApplicationId>spotify.voice.commander.app</ApplicationId>
    <ApplicationTitle>SpotifyVoiceCommander.Maui</ApplicationTitle>

    <DefineConstants>$(DefineConstants);DEVELOPMENT</DefineConstants>
    <!--<DefineConstants>$(DefineConstants);PRODUCTION</DefineConstants>-->
  </PropertyGroup>

  <!-- Common Windows and Android build properties -->
  
  <PropertyGroup>
    <UseInterpreter Condition="'$(Configuration)' == 'Debug'">true</UseInterpreter>
    <UseInterpreter Condition="'$(Configuration)' == 'Release'">false</UseInterpreter>
  </PropertyGroup>

  <!-- Android build properties -->

  <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
    <!--Trimmer settings-->
    <EnableUnsafeBinaryFormatterSerialization>false</EnableUnsafeBinaryFormatterSerialization>
    <EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
    <HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
    <MetadataUpdaterSupport>false</MetadataUpdaterSupport>
    <EventSourceSupport>false</EventSourceSupport>
    <!--NOTE(Ivan Stuk): Надо посмотреть для чего это было сделано в Actual.Chat-->
    <!--This instructs trimmer to remove managed HTTP handler-->
    <!--<UseNativeHttpHandler>true</UseNativeHttpHandler>-->
  </PropertyGroup>

  <!-- Android build properties -->

  <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
    <!--<AndroidKeyStore>True</AndroidKeyStore>
    <AndroidSigningKeyStore>etime.keystore</AndroidSigningKeyStore>
    <AndroidSigningKeyAlias>etime</AndroidSigningKeyAlias>
    <AndroidSigningKeyPass>789xxx44XX</AndroidSigningKeyPass>
    <AndroidSigningStorePass>789xxx44XX</AndroidSigningStorePass>
    <AndroidUseNegotiateAuthentication>false</AndroidUseNegotiateAuthentication>-->
  </PropertyGroup>
  <ItemGroup>
    <ProguardConfiguration Include="proguard.cfg" />
  </ItemGroup>

  <!-- Android: Both Debug & Release configurations -->
  <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
    <AndroidUseInterpreter>$(UseInterpreter)</AndroidUseInterpreter>
    <!-- This instructs trimmer to remove managed HTTP handler - don't use it with HttpClientHandler  -->
    <!--<UseNativeHttpHandler>true</UseNativeHttpHandler>-->
    <!-- <AndroidHttpClientHandlerType>Xamarin.Android.Net.AndroidClientHandler</AndroidHttpClientHandlerType> -->
    <!-- <AndroidHttpClientHandlerType>System.Net.Http.HttpClientHandler, System.Net.Http</AndroidHttpClientHandlerType> -->
    <!-- This also ensures debug symbols are there -->
    <DebuggerSupport>true</DebuggerSupport>
  </PropertyGroup>

  <!-- Android: Debug configuration -->
  <PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Debug'">
    <EmbedAssembliesIntoApk>False</EmbedAssembliesIntoApk>
  </PropertyGroup>

  <!-- Android: Release configuration -->
  <PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
    <!-- Output -->
    <!--<AndroidPackageFormat>apk</AndroidPackageFormat>-->

    <!-- Trimming & AOT -->
    <AndroidDexTool>d8</AndroidDexTool>
    <AndroidLinkTool>r8</AndroidLinkTool>
    <PublishTrimmed>true</PublishTrimmed>
    <TrimMode>partial</TrimMode>
    <RunAOTCompilation>true</RunAOTCompilation>
    <AndroidEnableProfiledAot>true</AndroidEnableProfiledAot>
    <AndroidStripILAfterAOT>true</AndroidStripILAfterAOT>
    <EnableLLVM>false</EnableLLVM>
    <!-- Almost works, but no WebSocket connection! -->

    <!-- Runtime -->
    <!-- Unnecessary:
    <RuntimeIdentifier>android-arm64</RuntimeIdentifier>
    -->
    <!-- Has no effect, because android-env.txt contains MONO_GC_PARAMS
    <AndroidEnableSGenConcurrent>false</AndroidEnableSGenConcurrent>
    -->
    <!-- Fails with No implementation found for void crc6444c698770736d3d5.MainApplication.n_OnAppForegrounded()
    <AndroidEnableMarshalMethods>true</AndroidEnableMarshalMethods >
    -->
    <!-- On preloading:
    1. There are 250 assemblies (bundled), so preloading assemblies hurts the startup.
       The delay isn't shown in our internal stats, coz it happens before any code runs,
       but it's percievable - maybe 300ms or so. Thus preloading all assemblies isn't
       a good option.
    3. Preloading AOT-d assemblies adds a delay as well, but since the amount of
       PGO AOT code is much smaller, this delay isn't quite percievable.
       When AOT code is preloaded, the startup delay is measurably smaller, but
       not by a lot - maybe 50ms or so.
    3. We know for sure that not everything we use on startup gets into AOT profiles.
       E.g. .mibc profiles are recorded with tracing, which definitely skips a
       decent part of calls. Funny enough, it's the same with .aprof profiles,
       which are supposed to be perfect.
    4. Overall, the best settings are:
       - AndroidEnablePreloadAssemblies = False // don't preload MSIL code
       - AndroidAotEnableLazyLoad = False // preload AOT code, though True might make sense here w/ larger AOT
       The default settings for release builds are also:
       - AndroidEnablePreloadAssemblies = False
       - AndroidAotEnableLazyLoad = True
    -->
    <AndroidEnablePreloadAssemblies>False</AndroidEnablePreloadAssemblies>
    <AndroidAotEnableLazyLoad>False</AndroidAotEnableLazyLoad>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
    <!--
    These two profiles are different, we can include none, any of them, or both.
    Using both seems to be the most efficient option.
    -->
    <MauiUseDefaultAotProfile>true</MauiUseDefaultAotProfile>
    <AndroidUseDefaultAotProfile>true</AndroidUseDefaultAotProfile>
  </PropertyGroup>

  <!-- Platform-specific files to compile -->

  <!-- Android -->
  <ItemGroup Condition="$(TargetFramework.Contains('-android')) != true">
    <Compile Remove="**\**\*.Android.cs" />
    <None Include="**\**\*.Android.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\Android\**\*.cs" />
    <None Include="**\Android\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <None Remove="GoogleService-Info.plist" />
  </ItemGroup>

  <!-- Windows -->
  <ItemGroup Condition="$(TargetFramework.Contains('-windows')) != true">
    <Compile Remove="**\*.Windows.cs" />
    <None Include="**\*.Windows.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\Windows\**\*.cs" />
    <None Include="**\Windows\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

</Project>
